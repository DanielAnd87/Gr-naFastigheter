@page "/realestate/{id:int}"
@using System.Net.Http.Json;
@inject IRealEstateHttpsRepository context
@inject NavigationManager NavManager

@using Entities.Models

<h3>Estate Details</h3>

@if (realEstate == null)
{
    <p>Loading.....</p>
}
else
{
    <div class="page-container">
        <div class="inner-container">
            <div class="card">
                <div class="card">
                    <h3>@realEstate.Title</h3>
                    @if (@realEstate.CanBeSold)
                    {
                        <p>Säljpris: @realEstate.SellingPrice</p>
                    }
                    else
                    {
                        <p>Uthyrningspris : @realEstate.RentingPrice</p>
                    }
                </div>
                <br />
                <p>Beskrivning : @realEstate.Description</p>
                <p>Address : @realEstate.Address</p>
                <p>Byggår: @realEstate.ConstructionYear</p>
                <p>Typ av bostad : @realEstate.RealEstateType</p>
                <img src="@realEstate.ImageUrl" />
                <AuthorizeView>
                    <Authorized>
                        <p @onclick="(e=> RedirectToUserPage(realEstate.UserName))">Säljes av @realEstate.UserName</p>
                        <p>Kontakt: @realEstate.Contact</p>
                        <p> Kommentarer: </p>

                        <CascadingValue Value="@UserComments">
                            <ViewComments CurrentRealEstateID="@realEstate.Id">


                            </ViewComments>
                        </CascadingValue>
                    </Authorized>
                </AuthorizeView>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    public RealEstate realEstate;
    public User user;
    public List<Comment> UserComments { get; set; }

    protected override async Task OnInitializedAsync()
    {
        realEstate = await context.GetRealEstateById(Id);
        if (realEstate.Comments != null)
        {
            UserComments = realEstate.Comments.Take(5).ToList();
        }
    }
    private void RedirectToUserPage(string userName)
    {
        NavManager.NavigateTo("/getuser/" + userName);
    }

    //private async Task ViewMoreComments()
    //{
    //    int commentsToSkip = UserComments.Count;
    //    var response = await context.GetCommentsByRealEstateId(Id, commentsToSkip, 5);
    //    Console.WriteLine(commentsToSkip);
    //    UserComments.AddRange(response);
    //}
}
