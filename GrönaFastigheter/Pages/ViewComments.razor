
@inject IRealEstateHttpsRepository context
@using System.Security.Claims
@using Entities.Models
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (UserComments == null)
{
    <p>Loading...</p>
}
else
{


    <div class="container justify-content-center mt-5 border-left border-right">
        @*<EditForm Model="newComment" OnValidSubmit="AddComment">

                 <div class="d-flex justify-content-center pt-3 pb-2"> <input type="text" name="text" placeholder="+ Add a note" class="form-control addtxt"> </div>
            /EditForm>*@

        <EditForm Model="newComment" OnValidSubmit="AddComment">
            <DataAnnotationsValidator />
            <div class="d-flex justify-content-center pt-3 pb-2">
                <label for="content" class="col-md-2 col-form-label"></label>
                <div class="col-md-10">
                    <InputText id="content" class="form-control" @bind-Value="newComment.Content" />
                    <ValidationMessage For="@(() => newComment.Content)" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-right">
                    <button type="submit" class="btn btn-success">Send</button>
                </div>
            </div>
        </EditForm>

        @foreach (var comment in UserComments)
        {
            <div class="d-flex justify-content-center py-2">
                <div class="second py-2 px-2">
                    <span class="text1">@comment.Content</span>
                    <div class="d-flex justify-content-between py-1 pt-2">
                        <div><img src="https://i.imgur.com/tPvlEdq.jpg" width="18"><span class="text2">@comment.UserName</span></div>
                        <div><span class="text3">Upvote?</span><span class="thumbup"><i class="fa fa-thumbs-o-up"></i></span><span class="text4">3</span></div>
                    </div>
                </div>
            </div>
        }
        <div class="btn" @onclick="@(e => ViewMoreComments())">
            <p>Visa mer kommentarer...</p>
        </div>
    </div>

}

@code {
    [Parameter]
    public int Page { get; set; }
    [Parameter]
    public int NumItems { get; set; }
    [Parameter]
    public int CurrentRealEstateID { get; set; }
    [CascadingParameter]
    public List<Comment> UserComments { get; set; }
    private Comment newComment { get; set; } = new Comment();
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }


    /// <summary>
    /// Todo: Vi kanske vill lägga till hantering om de inte går att lägga till.
    /// </summary>
    /// <returns></returns>
    private async Task AddComment()
    {
        newComment.RealEstateId = CurrentRealEstateID;
        try
        {
            Comment postedComment = await context.PostComment(newComment);
            UserComments.Add(postedComment);
        }
        catch
        {

        }
    }
    private async Task ViewMoreComments()
    {
        int commentsToSkip = UserComments.Count;
        try
        {
            var moreComments = await context.GetCommentsByRealEstateId(CurrentRealEstateID, commentsToSkip, 5);
            UserComments.AddRange(moreComments);
        }
        catch
        {

        }
    }
}

