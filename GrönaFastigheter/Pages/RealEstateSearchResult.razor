@using System.Net.Http.Json;
@inject IRealEstateHttpsRepository context

@using Entities.Models


@if (realEstates == null)
{
    <p>Loading.....</p>
}
else
{




    foreach (var estate in FilteredEstates)
    {
        <div class="card text-center m-5">
            <div class="card-header">
                @if (estate.CanBeSold)
                {
                    <h1>For Sale</h1>
                }
                else
                {
                    <h1>For Rent</h1>
                }
            </div>
            <div class="card-body">
                <h5 class="card-title">@estate.Title</h5>
                @if (estate.CanBeSold)
                {
                    <p>Selling price: @estate.SellingPrice</p>
                }
                else
                {
                    <p>Renting price : @estate.RentingPrice per month</p>
                }
                <img src="@estate.ImageUrl" />

                <NavLink href="@($"realestate/{estate.Id}")" class="btn btn-primary">More Info</NavLink>
            </div>
        </div>
        
    }
}

@code {
    [Parameter]
    public int Page { get; set; }
    [Parameter]
    public int NumItems { get; set; }
    private IEnumerable<RealEstate> realEstates;
    [CascadingParameter]
    public string searchterm { get; set; } = "";
    List<RealEstate> FilteredEstates => realEstates.Where(i => i.Title.ToLower().Contains(searchterm.ToLower())).ToList();

    protected override async Task OnInitializedAsync()
    {
        realEstates = await context.GetRealEstates();
    }


}
